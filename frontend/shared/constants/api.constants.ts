export const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api/v1';

export const API_ENDPOINTS = {
  AUTH: {
    SIGNUP: '/auth/signup',
    LOGIN: '/auth/login',
    LOGOUT: '/auth/logout',
    REFRESH_TOKEN: '/auth/refresh-token',
    FORGOT_PASSWORD: '/auth/forgot-password',
    RESET_PASSWORD: '/auth/reset-password',
    PROFILE: '/auth/profile',
  },
  USER: {
    PROFILE: '/user/profile',
    UPDATE_PROFILE: '/user/profile',
    DELETE_ACCOUNT: '/user/account',
  },
  PROBLEM: {
    GET_ALL: '/problem',
    GET_BY_ID: (id: string) => `/problem/${id}`,
    CREATE: '/problem',
    UPDATE: (id: string) => `/problem/${id}`,
    DELETE: (id: string) => `/problem/${id}`,
    STATS: '/problem/stats',
    SEARCH: '/problem/search',
    BY_CONCEPT: (concept: string) => `/problem/concept/${concept}`,
  },
  SUBMISSION: {
    SUBMIT: '/submission/submit',
    GET_BY_ID: (id: string) => `/submission/user/${id}`,
    GET_USER_SUBMISSIONS: '/submission/user/list',
    GET_USER_STATS: '/submission/stats/user',
    DELETE: (id: string) => `/submission/${id}`,
    GET_PROBLEM_SUBMISSIONS: (problemId: string) => `/submission/problem/${problemId}/list`,
    GET_PROBLEM_STATS: (problemId: string) => `/submission/problem/${problemId}/stats`,
    UPDATE_FEEDBACK: (id: string) => `/submission/${id}/feedback`,
  },
  ADMIN: {
    DASHBOARD: '/admin/dashboard',
    USERS: '/admin/users',
    UPDATE_USER_STATUS: (id: string) => `/admin/users/${id}/status`,
    PROBLEMS: '/admin/problems',
    UPDATE_PROBLEM_STATUS: (id: string) => `/admin/problems/${id}/status`,
    REPORTS: '/admin/reports',
    RESOLVE_REPORT: (id: string) => `/admin/reports/${id}/resolve`,
    ACTION_LOGS: '/admin/logs',
    SYSTEM_CONFIG: '/admin/config',
    BULK_ACTION: '/admin/bulk-action',
  },
  ANALYTICS: {
    USER: (userId: string) => `/analytics/user/${userId}`,
    PLATFORM: '/analytics/platform',
    PROBLEM: (problemId: string) => `/analytics/problem/${problemId}`,
    CONCEPT: (concept: string) => `/analytics/concept/${concept}`,
    CONTEST: (contestId: string) => `/analytics/contest/${contestId}`,
    PERFORMANCE: '/analytics/performance',
    USER_BEHAVIOR: (userId: string) => `/analytics/user-behavior/${userId}`,
    REPORT: '/analytics/report',
  },
  BOOKMARK: {
    GET_ALL: '/bookmark',
    GET_BY_ID: (id: string) => `/bookmark/${id}`,
    CREATE: '/bookmark',
    UPDATE: (id: string) => `/bookmark/${id}`,
    DELETE: (id: string) => `/bookmark/${id}`,
    FOLDERS: '/bookmark/folders',
    CREATE_FOLDER: '/bookmark/folders',
    UPDATE_FOLDER: (id: string) => `/bookmark/folders/${id}`,
    DELETE_FOLDER: (id: string) => `/bookmark/folders/${id}`,
    STATS: '/bookmark/stats',
    SEARCH: '/bookmark/search',
  },
  CONTEST: {
    GET_ALL: '/contest',
    GET_BY_ID: (id: string) => `/contest/${id}`,
    CREATE: '/contest',
    UPDATE: (id: string) => `/contest/${id}`,
    DELETE: (id: string) => `/contest/${id}`,
    JOIN: (id: string) => `/contest/${id}/join`,
    LEAVE: (id: string) => `/contest/${id}/leave`,
    LEADERBOARD: (id: string) => `/contest/${id}/leaderboard`,
    SUBMIT: (id: string) => `/contest/${id}/submit`,
    SUBMISSIONS: (id: string) => `/contest/${id}/submissions`,
    STATS: '/contest/stats',
  },
  DISCUSSION: {
    GET_ALL: '/discussion',
    GET_BY_ID: (id: string) => `/discussion/${id}`,
    CREATE: '/discussion',
    UPDATE: (id: string) => `/discussion/${id}`,
    DELETE: (id: string) => `/discussion/${id}`,
    COMMENTS: (id: string) => `/discussion/${id}/comments`,
    ADD_COMMENT: (id: string) => `/discussion/${id}/comments`,
    UPDATE_COMMENT: (discussionId: string, commentId: string) => `/discussion/${discussionId}/comments/${commentId}`,
    DELETE_COMMENT: (discussionId: string, commentId: string) => `/discussion/${discussionId}/comments/${commentId}`,
    LIKE: '/discussion/like',
    STATS: '/discussion/stats',
    SEARCH: '/discussion/search',
  },
  LEADERBOARD: {
    GLOBAL: '/leaderboard/global',
    CONCEPT: (concept: string) => `/leaderboard/concept/${concept}`,
    CONTEST: (contestId: string) => `/leaderboard/contest/${contestId}`,
    PERIOD: '/leaderboard/period',
    FRIENDS: '/leaderboard/friends',
    USER_RANK: (userId: string) => `/leaderboard/user/${userId}`,
    TREND: (userId: string) => `/leaderboard/trend/${userId}`,
    STATISTICS: '/leaderboard/statistics',
  },
  TAG: {
    GET_ALL: '/tag',
    GET_BY_ID: (id: string) => `/tag/${id}`,
    CREATE: '/tag',
    UPDATE: (id: string) => `/tag/${id}`,
    DELETE: (id: string) => `/tag/${id}`,
    USER_TAGS: (userId: string) => `/tag/user/${userId}`,
    PROBLEM_TAGS: (problemId: string) => `/tag/problem/${problemId}`,
    STATISTICS: (tagId: string) => `/tag/${tagId}/statistics`,
    LEARNING_PATHS: '/tag/learning-paths',
    SEARCH: '/tag/search',
  },
  USER_STATS: {
    GET: (userId: string) => `/userStats/${userId}`,
    UPDATE: (userId: string) => `/userStats/${userId}`,
    DASHBOARD: (userId: string) => `/userStats/${userId}/dashboard`,
    ACHIEVEMENTS: (userId: string) => `/userStats/${userId}/achievements`,
    CONCEPT_MASTERY: (userId: string) => `/userStats/${userId}/concept-mastery`,
    DAILY_ACTIVITY: (userId: string) => `/userStats/${userId}/daily-activity`,
    COMPARE: (userId: string, compareWithId: string) => `/userStats/${userId}/compare/${compareWithId}`,
  },
} as const;

export const HTTP_STATUS = {
  OK: 200,
  CREATED: 201,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  CONFLICT: 409,
  UNPROCESSABLE_ENTITY: 422,
  LOCKED: 423,
  TOO_MANY_REQUESTS: 429,
  INTERNAL_SERVER_ERROR: 500,
} as const;
